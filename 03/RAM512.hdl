// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Choose register
    DMux8Way(in=true, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    
    // Set operation for registers
    And(a=a, b=load, out=loadr1);
    And(a=b, b=load, out=loadr2);
    And(a=c, b=load, out=loadr3);
    And(a=d, b=load, out=loadr4);
    And(a=e, b=load, out=loadr5);
    And(a=f, b=load, out=loadr6);
    And(a=g, b=load, out=loadr7);
    And(a=h, b=load, out=loadr8);

    // Set Registers
    RAM64(in=in, load=loadr1, address=address[0..5], out=r1);
    RAM64(in=in, load=loadr2, address=address[0..5], out=r2);
    RAM64(in=in, load=loadr3, address=address[0..5], out=r3);
    RAM64(in=in, load=loadr4, address=address[0..5], out=r4);
    
    RAM64(in=in, load=loadr5, address=address[0..5], out=r5);
    RAM64(in=in, load=loadr6, address=address[0..5], out=r6);
    RAM64(in=in, load=loadr7, address=address[0..5], out=r7);
    RAM64(in=in, load=loadr8, address=address[0..5], out=r8);

    // Output Chosen Register
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address[6..8], out=out);
}